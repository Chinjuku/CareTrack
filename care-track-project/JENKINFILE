pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'project-app:latest'  // Use a local image name without the repository
    }

    stages {
        stage('Start Jenkins') {
            steps {
                script {
                    sh 'echo Start Jenkins............'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('./') { 
                        sh 'echo "Running in $(pwd)"'
                        sh 'echo start building the Docker image = $DOCKER_IMAGE'
                        sh 'docker build -t $DOCKER_IMAGE .'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh 'docker run -d --name project-app -p 8085:3000 $DOCKER_IMAGE' // Ensure the port mapping is correct
                }
            }
        }

        stage('Clear Docker Components') {
            steps {
                script {
                    sh 'docker stop project-app || true'  
                    sh 'docker rm project-app || true' 
                    sh 'docker rmi $DOCKER_IMAGE || true'  // Remove the local image if needed
                    sh 'docker system prune -af'  // Cleanup unused Docker resources
                }
            }
        }
    }

    post {
        always {
            script {
                sh 'echo Cleaning up Docker resources...'
            }
        }
    }
}
